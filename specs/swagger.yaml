openapi: 3.0.0
info:
  description: "API backend shelf"
  version: "1.0.10"
  title: "Backend em Shelf"
servers:
  - url: http://localhost:3000
    description: Local server
tags:
- name: "auth"
  description: "Access to Auth"
- name: "user"
  description: "Access to User"

paths:
  /auth/login:
      get:
        tags:
          - 'auth'
        summary: Login with credential (email/password)
        security:
          - basicAuth: []
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:  
                  $ref: '#/components/schemas/Tokenization'
          '403':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
          '404':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
  /auth/check_token:
      get:
        tags:
          - 'auth'
        summary: Check Bearer token
        security:
          - bearerRefreshAuth: []
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:  
                  type: object
                  properties:
                    message:
                      type: string
          '403':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
          '404':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
  /auth/refresh_token:
      get:
        tags:
          - 'auth'
        summary: Refresh Bearer token
        security:
          - bearerAuth: []
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:  
                  $ref: '#/components/schemas/Tokenization'
          '403':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
          '404':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
  /auth/update_password:
      put:
        tags:
          - 'auth'
        summary: Update password
        security:
          - bearerAuth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  password:
                    type: string
                  newPassword:
                    type: string
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:  
                  type: object
                  properties:
                    message:
                      type: string
          '403':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
          '404':
            description: ''
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/BackendException'
  /user/{id}:
    get:
      tags:
        - 'user'
      summary: Get user by id
      security:
        - bearerAuth: []
      parameters: 
        - in: path 
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
             application/json:
              schema:  
                $ref: '#/components/schemas/User'
        '403':
          description: ''
          content:
             application/json:
              schema: 
                $ref: '#/components/schemas/BackendException'
    delete:
      tags:
        - 'user'
      summary: Delete user by id
      security: 
        - bearerAuth: []
      parameters: 
        - in: path 
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
             application/json:
              schema: 
                type: object 
                properties: 
                  message: 
                    type: string 
        '404':
          description: ''
          content:
             application/json:
              schema: 
                $ref: '#/components/schemas/BackendException'
  /user/:
    get:
      tags:
        - 'user'
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendException'
    post:
      tags:
        - 'user'
      summary: create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: ''
          content:
             application/json:
              schema: 
                type: array 
                items: 
                  $ref: '#/components/schemas/User'
        '404':
          description: ''
          content:
             application/json:
              schema: 
                $ref: '#/components/schemas/BackendException'
    put:
      tags:
        - 'user'
      summary: Update user
      security: 
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: ''
          content:
             application/json:
              schema: 
                type: array 
                items: 
                  $ref: '#/components/schemas/User'
        '404':
          description: ''
          content:
             application/json:
              schema: 
                $ref: '#/components/schemas/BackendException'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Auth header (Authorization) Access Token"
    bearerRefreshAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Refresh Token"
  schemas:
    Tokenization:
        type: object
        properties:
          access_token:
            type: string
          refresh_token:
            type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          default: user
          enum:
            - "admin"
            - "user"
            - "manager"
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          default: user
          enum:
            - "admin"
            - "user"
            - "manager"
    BackendException:
      type: object
      properties:
        error:
          type: string